name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      skip_dependencies:
        description: 'Skip installing dependencies'
        required: false
        default: 'false'

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  install-dependencies:
    runs-on: ubuntu-latest
    needs: checkout
    if: ${{ github.event.inputs.skip_dependencies != 'true' }}
    steps:
      - name: Install PHP and Composer
        run: |
          sudo apt-get update
          sudo apt-get install -y php php-cli php-mbstring unzip curl
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
          composer install

  deploy-to-qa:
    runs-on: ubuntu-latest
    needs: [checkout, install-dependencies]
    steps:
      - name: Deploy to QA (Dummy Step)
        run: |
          echo "Deploying to QA environment..."
          # Simulate deployment
          echo "QA deployment simulated."

  qa-testing:
    runs-on: ubuntu-latest
    needs: deploy-to-qa
    steps:
      - name: QA Testing (Dummy Test)
        run: |
          echo "Running QA tests..."
          # Simulate QA test
          echo "<?php echo 'Hello, World!'; ?>" > index.php
          php index.php | grep "Hello, World!"
          echo "QA tests simulated."

  merge-to-master:
    runs-on: ubuntu-latest
    needs: qa-testing
    steps:
      - name: Merge Pull Request (Dummy Step)
        run: |
          echo "Merging to master branch..."
          # Simulate merging
          echo "Merge simulated."

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: merge-to-master
    steps:
      - name: Deploy to Production (Dummy Step)
        run: |
          echo "Deploying to production environment..."
          # Simulate production deployment
          echo "Production deployment simulated."

